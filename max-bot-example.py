#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –±–æ—Ç–∞ –¥–ª—è –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞ Max —Å –ø–æ–ª–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫—É maxbot –∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è —Å —Å–∏—Å—Ç–µ–º–æ–π Bothost
"""

import os
import logging
import asyncio
import json
from typing import Dict, Any, Optional, List
from datetime import datetime, timedelta
import requests
from maxbot import MaxBot, Message, User, Chat
from maxbot.handlers import CommandHandler, MessageHandler, CallbackHandler
from maxbot.keyboards import InlineKeyboard, ReplyKeyboard
from maxbot.filters import Filter

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv('BOT_TOKEN')
if not BOT_TOKEN:
    logger.error("BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    exit(1)

# URL –¥–ª—è API –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Bothost
AUTH_API_URL = os.getenv('AUTH_API_URL', 'https://bothost.ru/api/auth.php')

# –ü–æ–ª—É—á–∞–µ–º ID –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∞–≥–µ–Ω—Ç–æ–º)
BOT_ID = os.getenv('BOT_ID', 'demo_max_bot')

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
bot = MaxBot(BOT_TOKEN)

class MaxBotManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –±–æ—Ç–∞ Max —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º"""
    
    def __init__(self, bot_id: str, auth_api_url: str):
        self.bot_id = bot_id
        self.auth_api_url = auth_api_url
        self.user_sessions = {}  # –°–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        self.user_data = {}      # –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        self.stats = {           # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞
            'total_users': 0,
            'total_messages': 0,
            'start_time': datetime.now()
        }
    
    def get_user_session(self, user_id: str) -> Dict[str, Any]:
        """–ü–æ–ª—É—á–∏—Ç—å –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if user_id not in self.user_sessions:
            self.user_sessions[user_id] = {
                'state': 'idle',
                'data': {},
                'last_activity': datetime.now(),
                'message_count': 0
            }
        return self.user_sessions[user_id]
    
    def update_user_session(self, user_id: str, **kwargs):
        """–û–±–Ω–æ–≤–∏—Ç—å —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        session = self.get_user_session(user_id)
        session.update(kwargs)
        session['last_activity'] = datetime.now()
        session['message_count'] += 1
    
    def get_user_data(self, user_id: str) -> Dict[str, Any]:
        """–ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if user_id not in self.user_data:
            self.user_data[user_id] = {
                'user_id': user_id,
                'first_seen': datetime.now(),
                'total_messages': 0,
                'preferences': {
                    'language': 'ru',
                    'notifications': True,
                    'theme': 'light'
                },
                'subscription': {
                    'plan': 'free',
                    'expires_at': None,
                    'features': ['basic_messaging']
                }
            }
        return self.user_data[user_id]
    
    def update_user_data(self, user_id: str, **kwargs):
        """–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        user_data = self.get_user_data(user_id)
        user_data.update(kwargs)
    
    def get_bot_stats(self) -> Dict[str, Any]:
        """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–æ—Ç–∞"""
        uptime = datetime.now() - self.stats['start_time']
        return {
            'uptime': str(uptime).split('.')[0],
            'total_users': len(self.user_data),
            'active_users': len([s for s in self.user_sessions.values() 
                               if (datetime.now() - s['last_activity']).seconds < 3600]),
            'total_messages': sum(s['message_count'] for s in self.user_sessions.values()),
            'memory_usage': f"{len(str(self.user_data)) + len(str(self.user_sessions))} bytes"
        }

# –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –±–æ—Ç–∞
bot_manager = MaxBotManager(BOT_ID, AUTH_API_URL)

class MaxBotFeatures:
    """–ö–ª–∞—Å—Å —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞"""
    
    @staticmethod
    def create_main_menu() -> InlineKeyboard:
        """–°–æ–∑–¥–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        keyboard = InlineKeyboard()
        keyboard.add_button("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats")
        keyboard.add_button("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")
        keyboard.add_button("üéÆ –ò–≥—Ä—ã", callback_data="games")
        keyboard.add_button("üìö –ü–æ–º–æ—â—å", callback_data="help")
        keyboard.add_button("üîß –ê–¥–º–∏–Ω", callback_data="admin")
        return keyboard
    
    @staticmethod
    def create_settings_menu() -> InlineKeyboard:
        """–°–æ–∑–¥–∞—Ç—å –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        keyboard = InlineKeyboard()
        keyboard.add_button("üåê –Ø–∑—ã–∫", callback_data="lang_settings")
        keyboard.add_button("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="notif_settings")
        keyboard.add_button("üé® –¢–µ–º–∞", callback_data="theme_settings")
        keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")
        return keyboard
    
    @staticmethod
    def create_games_menu() -> InlineKeyboard:
        """–°–æ–∑–¥–∞—Ç—å –º–µ–Ω—é –∏–≥—Ä"""
        keyboard = InlineKeyboard()
        keyboard.add_button("üé≤ –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ", callback_data="random_number")
        keyboard.add_button("üéØ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ", callback_data="guess_number")
        keyboard.add_button("üìù –í–∏–∫—Ç–æ—Ä–∏–Ω–∞", callback_data="quiz")
        keyboard.add_button("üéÆ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏", callback_data="tic_tac_toe")
        keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")
        return keyboard
    
    @staticmethod
    def create_admin_menu() -> InlineKeyboard:
        """–°–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω –º–µ–Ω—é"""
        keyboard = InlineKeyboard()
        keyboard.add_button("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞", callback_data="bot_stats")
        keyboard.add_button("üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", callback_data="users_list")
        keyboard.add_button("üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", callback_data="bot_management")
        keyboard.add_button("üìä –õ–æ–≥–∏", callback_data="bot_logs")
        keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")
        return keyboard

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.command_handler('/start')
async def start_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = message.from_user
    user_id = str(user.id)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot_manager.update_user_session(user_id, state='idle')
    bot_manager.update_user_data(user_id, 
                               username=user.username,
                               first_name=user.first_name,
                               last_name=user.last_name)
    
    welcome_text = f"""ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Max Bot!

üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!

–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞ Max –∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç 
–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π Bothost.

üéØ –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
‚Ä¢ üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
‚Ä¢ ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ üéÆ –ú–∏–Ω–∏-–∏–≥—Ä—ã –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è
‚Ä¢ üìö –°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
‚Ä¢ üîß –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏

üÜî –í–∞—à ID: {user.id}
üë§ Username: @{user.username or '–Ω–µ —É–∫–∞–∑–∞–Ω'}
üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {datetime.now().strftime('%d.%m.%Y %H:%M')}

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:"""
    
    await message.reply(
        text=welcome_text,
        reply_markup=MaxBotFeatures.create_main_menu()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@bot.command_handler('/help')
async def help_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ Max Bot

ü§ñ –û –±–æ—Ç–µ:
Max Bot - —ç—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –±–æ—Ç –¥–ª—è –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞ Max, 
–ø–æ–∫–∞–∑—ã–≤–∞—é—â–∏–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã Bothost.

üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
/profile - –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏
/games - –ò–≥—Ä—ã –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è
/admin - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏

üéÆ –ò–≥—Ä—ã:
‚Ä¢ –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
‚Ä¢ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ - –∏–≥—Ä–∞ –Ω–∞ —É–≥–∞–¥—ã–≤–∞–Ω–∏–µ
‚Ä¢ –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ - –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã
‚Ä¢ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏ - –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞

‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏:
‚Ä¢ –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
‚Ä¢ –¢–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è

‚ùì –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start 
–¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    
    await message.reply(help_text)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /info
@bot.command_handler('/info')
async def info_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /info"""
    stats = bot_manager.get_bot_stats()
    
    info_text = f"""‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Max Bot

ü§ñ ID –±–æ—Ç–∞: {BOT_ID}
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {stats['uptime']}
‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['total_users']}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['active_users']}
‚Ä¢ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {stats['total_messages']}
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: {stats['memory_usage']}

üõ°Ô∏è –°–∏—Å—Ç–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:
‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Bothost Auth API
‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
‚Ä¢ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π

üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
‚Ä¢ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞: maxbot
‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: Bothost Auth API
‚Ä¢ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: Max Messenger
‚Ä¢ –í–µ—Ä—Å–∏—è: 1.0.0

üåê –ü–æ–¥–¥–µ—Ä–∂–∫–∞:
‚Ä¢ –°–∞–π—Ç: https://bothost.ru
‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://bothost.ru/docs
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞: support@bothost.ru"""
    
    await message.reply(info_text)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /profile
@bot.command_handler('/profile')
async def profile_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /profile"""
    user = message.from_user
    user_id = str(user.id)
    
    user_data = bot_manager.get_user_data(user_id)
    session = bot_manager.get_user_session(user_id)
    
    profile_text = f"""üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å

üÜî Max ID: {user.id}
üë§ Username: @{user.username or '–Ω–µ —É–∫–∞–∑–∞–Ω'}
üìõ –ò–º—è: {user.first_name} {user.last_name or ''}
üåê –Ø–∑—ã–∫: {user_data['preferences']['language']}

üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
‚Ä¢ –ü–µ—Ä–≤—ã–π –≤—Ö–æ–¥: {user_data['first_seen'].strftime('%d.%m.%Y %H:%M')}
‚Ä¢ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {user_data['total_messages']}
‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–π –≤ —Å–µ—Å—Å–∏–∏: {session['message_count']}
‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {session['last_activity'].strftime('%d.%m.%Y %H:%M')}

‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏:
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {'‚úÖ –í–∫–ª—é—á–µ–Ω—ã' if user_data['preferences']['notifications'] else '‚ùå –û—Ç–∫–ª—é—á–µ–Ω—ã'}
‚Ä¢ –¢–µ–º–∞: {user_data['preferences']['theme']}
‚Ä¢ –Ø–∑—ã–∫: {user_data['preferences']['language']}

üé´ –ü–æ–¥–ø–∏—Å–∫–∞:
‚Ä¢ –ü–ª–∞–Ω: {user_data['subscription']['plan'].upper()}
‚Ä¢ –§—É–Ω–∫—Ü–∏–∏: {', '.join(user_data['subscription']['features'])}
‚Ä¢ –ò—Å—Ç–µ–∫–∞–µ—Ç: {user_data['subscription']['expires_at'] or '–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π'}"""
    
    await message.reply(profile_text)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats
@bot.command_handler('/stats')
async def stats_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats"""
    user_id = str(message.from_user.id)
    user_data = bot_manager.get_user_data(user_id)
    session = bot_manager.get_user_session(user_id)
    
    stats_text = f"""üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

üë§ –õ–∏—á–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
‚Ä¢ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {user_data['total_messages']}
‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–π –≤ —Å–µ—Å—Å–∏–∏: {session['message_count']}
‚Ä¢ –í—Ä–µ–º—è –≤ –±–æ—Ç–µ: {datetime.now() - user_data['first_seen']}
‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {session['last_activity'].strftime('%H:%M')}

ü§ñ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:
‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {bot_manager.stats['total_users']}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len([s for s in bot_manager.user_sessions.values() if (datetime.now() - s['last_activity']).seconds < 3600])}
‚Ä¢ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {bot_manager.stats['total_messages']}
‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {bot_manager.get_bot_stats()['uptime']}"""
    
    await message.reply(stats_text)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /games
@bot.command_handler('/games')
async def games_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /games"""
    games_text = """üéÆ –ò–≥—Ä—ã –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è

–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:

üé≤ –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ
üéØ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≥–∞–¥–∞—Ç—å –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ
üìù –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ - –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
üéÆ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏ - –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞ –ø—Ä–æ—Ç–∏–≤ –±–æ—Ç–∞

–í—Å–µ –∏–≥—Ä—ã –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞ Max –∏ 
—Ä–∞–±–æ—Ç–∞—é—Ç —á–µ—Ä–µ–∑ —É–¥–æ–±–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –∏ –º–µ–Ω—é."""
    
    await message.reply(
        text=games_text,
        reply_markup=MaxBotFeatures.create_games_menu()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /settings
@bot.command_handler('/settings')
async def settings_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /settings"""
    settings_text = """‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å:
‚Ä¢ üåê –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
‚Ä¢ üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
‚Ä¢ üé® –¢–µ–º—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:"""
    
    await message.reply(
        text=settings_text,
        reply_markup=MaxBotFeatures.create_settings_menu()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin
@bot.command_handler('/admin')
async def admin_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin"""
    user_id = str(message.from_user.id)
    
    # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω–∞—è –ª–æ–≥–∏–∫–∞
    admin_ids = ['123456789', '987654321']  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ ID –∞–¥–º–∏–Ω–æ–≤
    
    if user_id not in admin_ids:
        await message.reply("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return
    
    admin_text = f"""üë®‚Äçüíº –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å

üîê –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã: ‚úÖ –ê–∫—Ç–∏–≤–Ω–∞
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:
‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {bot_manager.stats['total_users']}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π: {len(bot_manager.user_sessions)}
‚Ä¢ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {bot_manager.stats['total_messages']}
‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {bot_manager.get_bot_stats()['uptime']}

üõ†Ô∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–æ—Ç–∞
‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"""
    
    await message.reply(
        text=admin_text,
        reply_markup=MaxBotFeatures.create_admin_menu()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback-–æ–≤
@bot.callback_handler(lambda callback: callback.data == 'main_menu')
async def main_menu_callback(callback):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await callback.message.edit_text(
        text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=MaxBotFeatures.create_main_menu()
    )
    await callback.answer()

@bot.callback_handler(lambda callback: callback.data == 'stats')
async def stats_callback(callback):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    user_id = str(callback.from_user.id)
    user_data = bot_manager.get_user_data(user_id)
    session = bot_manager.get_user_session(user_id)
    
    stats_text = f"""üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

üë§ –õ–∏—á–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
‚Ä¢ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {user_data['total_messages']}
‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–π –≤ —Å–µ—Å—Å–∏–∏: {session['message_count']}
‚Ä¢ –í—Ä–µ–º—è –≤ –±–æ—Ç–µ: {datetime.now() - user_data['first_seen']}
‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {session['last_activity'].strftime('%H:%M')}

ü§ñ –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {bot_manager.stats['total_users']}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len([s for s in bot_manager.user_sessions.values() if (datetime.now() - s['last_activity']).seconds < 3600])}
‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞: {bot_manager.get_bot_stats()['uptime']}"""
    
    keyboard = InlineKeyboard()
    keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")
    
    await callback.message.edit_text(
        text=stats_text,
        reply_markup=keyboard
    )
    await callback.answer()

@bot.callback_handler(lambda callback: callback.data == 'settings')
async def settings_callback(callback):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    settings_text = """‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å:
‚Ä¢ üåê –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
‚Ä¢ üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è  
‚Ä¢ üé® –¢–µ–º—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:"""
    
    await callback.message.edit_text(
        text=settings_text,
        reply_markup=MaxBotFeatures.create_settings_menu()
    )
    await callback.answer()

@bot.callback_handler(lambda callback: callback.data == 'games')
async def games_callback(callback):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–≥—Ä"""
    games_text = """üéÆ –ò–≥—Ä—ã –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è

–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:

üé≤ –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
üéØ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ - –∏–≥—Ä–∞ –Ω–∞ —É–≥–∞–¥—ã–≤–∞–Ω–∏–µ
üìù –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ - –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã
üéÆ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏ - –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞"""
    
    await callback.message.edit_text(
        text=games_text,
        reply_markup=MaxBotFeatures.create_games_menu()
    )
    await callback.answer()

@bot.callback_handler(lambda callback: callback.data == 'random_number')
async def random_number_callback(callback):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–≥—Ä—ã '–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ'"""
    import random
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100
    number = random.randint(1, 100)
    
    game_text = f"""üé≤ –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ

üéØ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ: **{number}**

–î–∏–∞–ø–∞–∑–æ–Ω: 1-100
–í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {datetime.now().strftime('%H:%M:%S')}

–•–æ—Ç–∏—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –µ—â–µ –æ–¥–Ω–æ —á–∏—Å–ª–æ?"""
    
    keyboard = InlineKeyboard()
    keyboard.add_button("üé≤ –ï—â–µ —á–∏—Å–ª–æ", callback_data="random_number")
    keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∏–≥—Ä–∞–º", callback_data="games")
    
    await callback.message.edit_text(
        text=game_text,
        reply_markup=keyboard
    )
    await callback.answer(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —á–∏—Å–ª–æ: {number}")

@bot.callback_handler(lambda callback: callback.data == 'guess_number')
async def guess_number_callback(callback):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–≥—Ä—ã '–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ'"""
    user_id = str(callback.from_user.id)
    session = bot_manager.get_user_session(user_id)
    
    # –ó–∞–≥–∞–¥—ã–≤–∞–µ–º —á–∏—Å–ª–æ –µ—Å–ª–∏ –∏–≥—Ä–∞ –Ω–µ –Ω–∞—á–∞—Ç–∞
    if 'guess_game' not in session['data']:
        import random
        session['data']['guess_game'] = {
            'number': random.randint(1, 100),
            'attempts': 0,
            'max_attempts': 7
        }
        bot_manager.update_user_session(user_id, state='guessing')
    
    game_data = session['data']['guess_game']
    
    game_text = f"""üéØ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ

–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100.
–£ –≤–∞—Å –µ—Å—Ç—å {game_data['max_attempts']} –ø–æ–ø—ã—Ç–æ–∫.

–ü–æ–ø—ã—Ç–æ–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {game_data['attempts']}
–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: {game_data['max_attempts'] - game_data['attempts']}

–û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–∏—Å–ª–æ –≤ —á–∞—Ç –¥–ª—è —É–≥–∞–¥—ã–≤–∞–Ω–∏—è!"""
    
    keyboard = InlineKeyboard()
    keyboard.add_button("üîÑ –ù–æ–≤–∞—è –∏–≥—Ä–∞", callback_data="guess_number_new")
    keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∏–≥—Ä–∞–º", callback_data="games")
    
    await callback.message.edit_text(
        text=game_text,
        reply_markup=keyboard
    )
    await callback.answer("–ò–≥—Ä–∞ –Ω–∞—á–∞—Ç–∞! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–∏—Å–ª–æ –≤ —á–∞—Ç.")

@bot.callback_handler(lambda callback: callback.data == 'guess_number_new')
async def guess_number_new_callback(callback):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–≤–æ–π –∏–≥—Ä—ã '–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ'"""
    user_id = str(callback.from_user.id)
    session = bot_manager.get_user_session(user_id)
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–≥—Ä—É
    session['data']['guess_game'] = None
    bot_manager.update_user_session(user_id, state='idle')
    
    await guess_number_callback(callback)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∏–≥—Ä—ã "–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ"
@bot.message_handler(lambda message: bot_manager.get_user_session(str(message.from_user.id))['state'] == 'guessing')
async def guess_number_message(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∏–≥—Ä–µ '–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ'"""
    user_id = str(message.from_user.id)
    session = bot_manager.get_user_session(user_id)
    
    try:
        guess = int(message.text)
    except ValueError:
        await message.reply("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!")
        return
    
    game_data = session['data']['guess_game']
    game_data['attempts'] += 1
    
    if guess == game_data['number']:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≥–∞–¥–∞–ª!
        result_text = f"""üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É–≥–∞–¥–∞–ª–∏!

üéØ –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ: {game_data['number']}
üìä –ü–æ–ø—ã—Ç–æ–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {game_data['attempts']}
‚≠ê –û—Ü–µ–Ω–∫–∞: {'–û—Ç–ª–∏—á–Ω–æ!' if game_data['attempts'] <= 3 else '–•–æ—Ä–æ—à–æ!' if game_data['attempts'] <= 5 else '–ù–µ–ø–ª–æ—Ö–æ!'}

–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑?"""
        
        keyboard = InlineKeyboard()
        keyboard.add_button("üéÆ –ù–æ–≤–∞—è –∏–≥—Ä–∞", callback_data="guess_number")
        keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∏–≥—Ä–∞–º", callback_data="games")
        
        await message.reply(
            text=result_text,
            reply_markup=keyboard
        )
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–≥—Ä—É
        session['data']['guess_game'] = None
        bot_manager.update_user_session(user_id, state='idle')
        
    elif game_data['attempts'] >= game_data['max_attempts']:
        # –ü–æ–ø—ã—Ç–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å
        result_text = f"""üòî –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!

üéØ –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±—ã–ª–æ: {game_data['number']}
üìä –ü–æ–ø—ã—Ç–æ–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {game_data['attempts']}

–ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ—Å—å, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!"""
        
        keyboard = InlineKeyboard()
        keyboard.add_button("üéÆ –ù–æ–≤–∞—è –∏–≥—Ä–∞", callback_data="guess_number")
        keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∏–≥—Ä–∞–º", callback_data="games")
        
        await message.reply(
            text=result_text,
            reply_markup=keyboard
        )
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–≥—Ä—É
        session['data']['guess_game'] = None
        bot_manager.update_user_session(user_id, state='idle')
        
    else:
        # –î–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
        hint = "–±–æ–ª—å—à–µ" if guess < game_data['number'] else "–º–µ–Ω—å—à–µ"
        hint_text = f"""ü§î –ù–µ —É–≥–∞–¥–∞–ª–∏!

–í–∞—à–µ —á–∏—Å–ª–æ: {guess}
–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ {hint} —á–µ–º {guess}

–ü–æ–ø—ã—Ç–æ–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {game_data['attempts']}/{game_data['max_attempts']}
–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: {game_data['max_attempts'] - game_data['attempts']}

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!"""
        
        await message.reply(hint_text)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler()
async def handle_all_messages(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user = message.from_user
    user_id = str(user.id)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    bot_manager.update_user_session(user_id, state='idle')
    bot_manager.update_user_data(user_id, total_messages=bot_manager.get_user_data(user_id)['total_messages'] + 1)
    bot_manager.stats['total_messages'] += 1
    
    response_text = f"""üí¨ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user.first_name}!

üìù –¢–µ–∫—Å—Ç: {message.text}
üÜî –í–∞—à ID: {user.id}
üë§ Username: @{user.username or '–Ω–µ —É–∫–∞–∑–∞–Ω'}
üìÖ –í—Ä–µ–º—è: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}

‚ÑπÔ∏è –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help
üè† –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start"""
    
    await message.reply(response_text)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
@bot.error_handler()
async def error_handler(error):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"–û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ: {str(error)}")
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info(f"–ó–∞–ø—É—Å–∫ Max Bot {BOT_ID}...")
    
    # –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    logger.info(f"Bot ID: {BOT_ID}")
    logger.info(f"Auth API URL: {AUTH_API_URL}")
    logger.info(f"Max Bot –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    try:
        bot.run()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {str(e)}")
        raise

if __name__ == "__main__":
    main()
